name: Continuous Integration

on:
  push:
    branches:
      - 'features/*'
    
jobs:

  test:
    name: Run unit tests
    runs-on: ubuntu-18.04
    #if: false # always skip job
    steps:
      - uses: actions/checkout@v2
      - uses: falti/dotenv-action@v0.2.5
        id: dotenv
        with:
          path: ./config/dev.env
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.4
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Run unit tests
        run: mvn -B verify
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: Unit Test Results
          files: ./target/surefire-reports/*.xml
          report_individual_runs: true
          deduplicate_classes_by_file_name: false
      - uses: jwgmeligmeyling/pmd-github-action@master
        if: always()
        with:
          path: '**/pmd.xml'
      - uses: jwgmeligmeyling/spotbugs-github-action@master
        if: always()
        with:
          path: '**/spotbugsXml.xml'
      - name: Upload Jacoco coverage report
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: jacoco-report
          path: target/site/jacoco/
      - name: Run check style
        uses: jwgmeligmeyling/checkstyle-github-action@master
        if: always()
        with:
          path: '**/checkstyle-result.xml'
      - uses: codecov/codecov-action@v1
        if: always()
        with:
          file: target/site/jacoco/jacoco.xml
          fail_ci_if_error: false
      - name: Build Docker image
        run: docker build --file ./src/main/docker/Dockerfile --tag ${{ steps.dotenv.outputs.DOCKER_REPOSITORY}}/${{ steps.dotenv.outputs.APP}}-${{ steps.dotenv.outputs.APP_MODULE}}:latest .
      - name: Tag Docker image
        run: docker tag ${{ steps.dotenv.outputs.DOCKER_REPOSITORY}}/${{ steps.dotenv.outputs.APP}}-${{ steps.dotenv.outputs.APP_MODULE}}:latest msproductos:latest 
      - name: Test
        run: |
         docker-compose -f ./test/docker-compose.yaml up --abort-on-container-exit --exit-code-from test &&
         docker-compose -f ./config/docker-compose.yaml down

##docker-compose -f ./config/docker-compose.yaml build &&         